{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","result","setresult","click","e","target","name","backspace","slice","clear","calculate","eval","toString","error","className","type","value","id","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"20BAIA,SAASA,MAAO,IAAD,UAEYC,oDAAS,IAFrB,sLAENC,OAFM,cAECC,UAFD,cAIPC,MAAM,SAACC,GACXF,UAAUD,OAAOG,EAAEC,OAAOC,OAGtBC,UAAU,WACdL,UAAUD,OAAOO,MAAM,GAAG,KAGtBC,MAAM,WACVP,UAAU,KAGNQ,UAAU,SAAVA,YACJ,GAAW,SAART,OACDC,UAAU,cAGZ,IACEA,UAAUS,KAAKV,OAAOW,aAExB,MAAMC,OACJX,UAAU,WAKd,OACE,6HACA,mEAAKY,UAAU,UAAf,UACA,4EACE,uEAAUA,UAAU,QAAQC,KAAK,OAAOC,MAAOf,WAEjD,mEAAKa,UAAU,SAAf,UACE,qEAAQG,GAAG,QAAQC,QAAST,MAA5B,mBACA,qEAAQQ,GAAG,YAAYC,QAASX,UAAhC,eACA,qEAAQD,KAAK,IAAIY,QAASf,MAA1B,eACA,qEAAQG,KAAK,IAAIY,QAASf,MAA1B,eACA,qEAAQG,KAAK,IAAIY,QAASf,MAA1B,eACA,qEAAQG,KAAK,IAAIY,QAASf,MAA1B,eACA,qEAAQG,KAAK,IAAIY,QAASf,MAA1B,eACA,qEAAQG,KAAK,IAAIY,QAASf,MAA1B,eACA,qEAAQG,KAAK,IAAIY,QAASf,MAA1B,eACA,qEAAQG,KAAK,IAAIY,QAASf,MAA1B,eACA,qEAAQG,KAAK,IAAIY,QAASf,MAA1B,kBACA,qEAAQG,KAAK,IAAIY,QAASf,MAA1B,eACA,qEAAQG,KAAK,IAAIY,QAASf,MAA1B,eACA,qEAAQG,KAAK,IAAIY,QAASf,MAA1B,eACA,qEAAQG,KAAK,IAAIY,QAASf,MAA1B,eACA,qEAAQG,KAAK,IAAIY,QAASf,MAA1B,eACA,qEAAQG,KAAK,IAAIY,QAASf,MAA1B,eACA,qEAAQc,GAAG,SAASC,QAASR,UAA7B,4BAOSX,2B,wICrDAoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC/B,EAAA,EAAD,MAEFgC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.56392bbb.chunk.js","sourcesContent":["import  { useState } from 'react';\nimport './App.css';\n\n\nfunction App() {\n\n  const [result,setresult]=useState(\"\");\n\n  const click=(e)=>{\n    setresult(result+e.target.name);\n  }\n\n  const backspace=()=>{\n    setresult(result.slice(0,-1));\n  }\n\n  const clear=()=>{\n    setresult(\"\");\n  }\n\n  const calculate=()=>{\n    if(result==\"Error\"){\n      setresult(\"Error\");\n    }\n    else{\n    try{\n      setresult(eval(result.toString()));\n    }\n    catch(error){\n      setresult(\"Error\");\n    }\n  }\n  }\n  \n  return (\n    <>\n    <div className=\"cal-app\">\n    <form>\n      <textarea className=\"input\" type=\"text\" value={result}></textarea>\n    </form>\n    <div className=\"keypad\">\n      <button id=\"clear\" onClick={clear}>Clear</button>\n      <button id=\"backspace\" onClick={backspace}>C</button>\n      <button name=\"+\" onClick={click}>+</button>\n      <button name=\"7\" onClick={click}>7</button>\n      <button name=\"8\" onClick={click}>8</button>\n      <button name=\"9\" onClick={click}>9</button>\n      <button name=\"-\" onClick={click}>-</button>\n      <button name=\"4\" onClick={click}>4</button>\n      <button name=\"5\" onClick={click}>5</button>\n      <button name=\"6\" onClick={click}>6</button>\n      <button name=\"*\" onClick={click}>&times;</button>\n      <button name=\"1\" onClick={click}>1</button>\n      <button name=\"2\" onClick={click}>2</button>\n      <button name=\"3\" onClick={click}>3</button>\n      <button name=\"/\" onClick={click}>/</button>\n      <button name=\"0\" onClick={click}>0</button>\n      <button name=\".\" onClick={click}>.</button>\n      <button id=\"result\" onClick={calculate}>Result</button>\n    </div>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}